---
- debug:
    msg: "Installing infrastructure for workshop in {{ namespace }}"
- debug:
    msg: "Provisioning {{ user_count }} users"
- debug:
    msg: "Provisioning a {{ workshop_type }} workshop"
- debug:
    msg: "Installing {{ features_to_install }}"

- name: Create project {{ namespace }} if it doesn't exist
  command: "oc new-project {{ namespace }}"
  ignore_errors: true

- name: Verify there is a node with env=infra label
  command: "oc get nodes -o jsonpath='{.items[?(@.metadata.labels.env==\"infra\")].metadata.name}'"
  register: infranodes

- name: Modify nodeselector for {{ namespace }} so that it goes to an infra node if there is an infra node
  command: "oc annotate namespace/{{ namespace }} openshift.io/node-selector=\"env=infra\" --overwrite"
  when: infranodes.stdout != ""

#- name: Get apps route suffix
#  block:
#    - openshift_v1_route:
#        name: dummy
#        namespace: "{{ namespace }}"
#        state: present
#        spec_to_kind: Service
#        spec_to_name: dummy
#        spec_port_target_port: 8080
#      register: dummy_route
#    - set_fact:
#        apps_hostname_suffix: "{{ dummy_route.route.spec.host|regex_replace('^dummy-' + namespace + '\\.(.*)$', '\\1') }}"
#    - openshift_v1_route:
#        name: dummy
#        namespace: "{{ namespace }}"
#        state: absent

- name: Get apps route suffix
  block:
    - k8s:
        state: present
        definition:
          apiVersion: "route.openshift.io/v1"
          kind: Route
          metadata:
            name: dummy
            namespace: "{{ namespace }}"
          spec:
            to:
              kind: Service
              name: dummy
            ports:
            - targetPort: 8080
    - k8s_facts:
        api_version: "route.openshift.io/v1"
        kind: Route
        name: dummy
        namespace: "{{ namespace }}"
      register: dummy_route
    - set_fact:
        apps_hostname_suffix: "{{ dummy_route.resources[0].spec.host|regex_replace('^dummy-' + namespace + '\\.(.*)$', '\\1') }}"
    - k8s:
        state: absent
        api_version: "route.openshift.io/v1"
        kind: Route
        name: dummy
        namespace: "{{ namespace }}"

###
- name: "Create temporary directory"
  tempfile:
    state: directory
    path: "/tmp/"
  register: tmp_dir

- include_tasks: install-etherpad.yml
  when: '"etherpad" in features_to_install'

- include_tasks: install-guides.yml
  when: '"guides" in features_to_install'

- include_tasks: install-terminals.yml
  when: '"terminals" in features_to_install'

- include_tasks: install-gogs.yml
  when: '"gogs" in features_to_install'

- include_tasks: install-nexus.yml
  when: '"nexus" in features_to_install'

- include_tasks: install-ocp-ops-view.yml
  when: '"ocp-ops-view" in features_to_install'

- include_tasks: install-che.yml
  when: '"che" in features_to_install'

- include_tasks: per_user.yml
  with_sequence: start=1 end={{ user_count }} format={{ user_format }}

- include_tasks: track-workshop-deployment.yml