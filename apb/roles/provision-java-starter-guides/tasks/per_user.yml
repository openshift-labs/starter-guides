---
- name: per user
  block:
    - set_fact:
        my_user: "{{ item }}"

    # Create user project and make him admin
    - name: check if workshop user's project for user "{{ my_user }}" exists
      shell: "oc get project {{ my_user }}"
      register: user_project
      ignore_errors: true
      changed_when: false

    - name: Create workshop user's project for user "{{ my_user }}"
      command: "oc adm new-project {{ my_user }}"
      when: user_project is failed

    - name: Annotate the project as requested by user for user "{{ my_user }}"
      command: "oc annotate namespace {{my_user}} openshift.io/requester={{my_user}} --overwrite"

    - name: Award admin permission for user "{{ my_user }}"
      command: "oc adm policy add-role-to-user admin {{ my_user }} -n {{ my_user }}"

    # Create cluster quota for the user to prevent abuse
    - name: Create user Quota definition - clusterresourcequota
      shell: >
            oc create clusterquota clusterquota-"{{my_user}}"
            --project-annotation-selector=openshift.io/requester="{{my_user}}"
            --hard pods="{{quota_pods}}"
            --hard persistentvolumeclaims="{{quota_persistentvolumeclaims}}"
            --hard services="{{quota_services}}"
            --dry-run -o yaml > clusterquota-{{ my_user }}.yml
      args:
        chdir: "{{ tmp_dir.path }}"
      tags: always


    - name: Apply user Quota - clusterresourcequota
      command: "oc apply -f clusterquota-{{ my_user }}.yml"
      args:
        chdir: "{{ tmp_dir.path }}"
      tags: always
  when: create_projects
